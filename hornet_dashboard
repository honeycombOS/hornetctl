#!/usr/bin/env python3

import os
import json
import errno
import sys
import subprocess
from optparse import OptionParser

def edit_file(config_file):
    lines = ""
    with open(config_file, "r") as f:
        for line in f.readlines():
            lines += line.replace("\n", "")

    config_json = json.loads(lines)

    if options.on:
        config_json["dashboard"]["bindAddress"] = "0.0.0.0:8081"
    else:
        config_json["dashboard"]["bindAddress"] = "localhost:8081"

    try:
        f = open(config_file, "w")
        f.write(json.dumps(config_json, indent=1))
        f.close()

        if options.on:
            if config_file == "/var/lib/hornet/config_comnet.json":
                print("Hornet Comnet Dashboard was enabled.")
            elif config_file == "/var/lib/hornet/config.json":
                print("Hornet Mainnet Dashboard was enabled.")
        else:
            if config_file == "/var/lib/hornet/config_comnet.json":
                print("Hornet Comnet Dashboard was disabled.")
            elif config_file == "/var/lib/hornet/config.json":
                print("Hornet Mainnet Dashboard was disabled.")

    except IOError as e:
        errorn, strerror = e.args
        if errorn == errno.EACCES:
            print("You need root permissions to do this!")
            sys.exit(1)

parser = OptionParser()
parser.add_option("--off", action="store_false", dest="on", default=False, help="Disable Hornet Dashboard.")
parser.add_option("--on", action="store_true", dest="on", default=True, help="Enable Hornet Dashboard (default).")

(options, args) = parser.parse_args()

if os.geteuid() != 0:
    print("You need root permissions to do this!")
    sys.exit(1)

status = os.system('systemctl is-active --quiet hornet') # will return 0 for active else inactive.
if not status:
    try:
        print("Stopping hornet.service.")
        os.system("systemctl stop hornet")
    except:
        print("Error while stopping hornet systemd service.")

comnet_config_file = "/var/lib/hornet/config_comnet.json"
config_file = "/var/lib/hornet/config.json"

edit_file(comnet_config_file)
edit_file(config_file)

if not status: # service was running, restart it
    print("Restarting hornet.service.\nIf Hornet is loading snapshot, it might take a while before the Dashboard is available. Please be patient.\nIf you note systemd errors, stop the service, run hornet_clean_db and hornet_clean_export and restart the service.")
    os.system('systemctl start hornet')

