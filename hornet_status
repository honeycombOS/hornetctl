#!/usr/bin/env python3

import os
import subprocess
import json

def main():
	status = {
		"version": hornetVersion(),
		"nodeStatus": nodeStatus(),
		"networkType": 
	}
	status = json.dumps(status)
	print(status)


def hornetVersion():
	try:
		status, output = subprocess.getstatusoutput('hornet --version')
		if status != 0:
			return "unknown"
		else:
			return output
	except:
		return "unknown"

def nodeStatus():
	try:
		cmd = 'systemctl status hornet'
		proc = subprocess.Popen(cmd, shell = True, stdout = subprocess.PIPE)
		stdout_list = proc.communicate()[0].decode("utf-8").split('\n')
		for line in stdout_list:
			if 'Active:' in line:
				if '(running)' in line:
					return {
						"status": 'running',
						"since": line.split('since')[1].strip()
					}
				else:
					return {
						"status": 'not-running',
						"since": line.split('since')[1].strip()
					}
		return {
			"status": "unknowns"
		}
	except E:
		return {
			"status": "error"
		}

def checkNetworkType():
	try:
		lines = []
		default_file = "/etc/default/hornet"
		f = open(default_file, "r")
    	lines = f.readlines()
    	f.close()

	except E:
		return false

def checkDashboard():
	try:

	except E:
		return false

if __name__ == "__main__":
    main()